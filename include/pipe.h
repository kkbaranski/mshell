/*//////////////////////////////////////////////////////////////////////
//                                                                    //
//                                  _          _ _                    //
//                                 | |        | | |                   //
//                    _ __ ___  ___| |__   ___| | |                   //
//                   | '_ ` _ \/ __| '_ \ / _ \ | |                   //
//                   | | | | | \__ \ | | |  __/ | |                   //
//                   |_| |_| |_|___/_| |_|\___|_|_|                   //
//                                                                    //
//                              ( pipe.h )                            //
//                                                                    //
////////////////////////////////////////////////////////////////////////
///-------------- Copyright Â© 2014 Krzysztof Baranski  --------------///
//////////////////////////////////////////////////////////////////////*/
#ifndef __PIPE_H__
#define __PIPE_H__

//==========================================================| INCLUDE
#include "bool.h"

//==========================================================| CONST

//==========================================================| DEFINE
#define PIPE_IN(x) (x).fd[0]
#define PIPE_OUT(x) (x).fd[1]

//==========================================================| TYPEDEF
typedef struct _pipe_t { int fd[2]; } pipe_t;

//==========================================================| VARIABLE

//==========================================================| FUNCTION
void		close_in( pipe_t* );
void		close_out( pipe_t* );
void		close_pipe( pipe_t* );
pipe_t		new_pipe();
void		replace_fd( int, int );
pipe_t		standard_pipe();

#endif // __PIPE_H__
